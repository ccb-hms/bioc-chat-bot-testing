---
title: "Embeddings, Vector Database, and RAG"
author: "Tyrone Lee"
format: revealjs
editor: visual
---

## LLM Architectures

```{mermaid}
%%| fig-width: 6
%%| fig-height: 5
%%| fig-responsive: false
%%| fig-cap: A decoder-only architecture  suited for generative tasks and fine-tuned with labeled data on discriminative tasks. ie GPT
flowchart LR
  A[text] --> B[/decoder\] --> C(more text)
  
```

## LLM Architectures

```{mermaid}
%%| fig-width: 6
%%| fig-height: 5
%%| fig-responsive: false
%%| fig-cap: Encoder-only architecture, best suited for classification and sentiment analysis Ie BERT
flowchart LR
  A[text] --> B[\encoder/] --> C(semantics)
```

## Encoder as an Embedding model

![A mapping of something into a greater set/category; into a high dimensional space represented by a vector. Embeddings can relate to images, audio and other types of data. In the above example, embeddings refer to text embeddings. The numerical representation is called a Vector.](vectordb&RAG_files/_Embedding_model_GIF.gif)

## 2D Embedding example

::: {layout-ncol="2"}
![plot](vectordb&RAG_files/2d-umap.png)

![array](vectordb&RAG_files/similarvector.png)
:::

## Native Vector Databases

::: {layout-ncol="2"}
![relational database, rows and columns](vectordb&RAG_files/relational-database.png)

![vector database, clusters of vectors](vectordb&RAG_files/vector-database.png)
:::

## The current landscape of Vector Database Frameworks

![](vectordb&RAG_files/thechoices.png)

## Retrieval Augmented Generation

![](vectordb&RAG_files/thePaper.png)

"P. Lewis et al., “Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks,” arXiv.org, Apr. 12, 2021. https://arxiv.org/abs/2005.11401"

## The Pipeline

```{mermaid}
%%| fig-width: 10
%%| fig-height: 7
%%| fig-responsive: false
flowchart TD
    A[Document] -->|1| B(document loader)
    B -->|2|C[Text]
    C -->|3| D[text splitter]
    D -->|4| E(text chunks)
    E -->|5| F(embedding)
    F -->|6| G[(Vector Storage)]
```

## The Pipeline

```{mermaid}
%%| fig-width: 10
%%| fig-height: 7
%%| fig-responsive: false
flowchart TD
    G[(Vector Storage)]
    G -->|7| H(Vector Similarity algo)
    I[Query] -->|8| J(embedding)
    J --> |9|K(Vector Query)
    K --> |10| H
    H -->|11| CHUNKS(Related text chunks)
    CHUNKS --> |12| M(Prompt Template)
    M-->|13|N[Prompt]
    N-->O((LLM chat/instruction model))
    O-->P{Answer}

```





## Mermaid diagram in Quarto is bugged

I tried to make this specifically so I wont have to copy and paste so many flow charts but the size options are broken in revealjs so I wasted time making all the diagrams in RStudio.
